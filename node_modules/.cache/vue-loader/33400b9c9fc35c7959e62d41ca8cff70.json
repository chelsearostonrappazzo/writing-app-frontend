{"remainingRequest":"/Users/chelsearoston/Desktop/Portfolio Projects/writing-app-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chelsearoston/Desktop/Portfolio Projects/writing-app-frontend/src/components/TipTapEditor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chelsearoston/Desktop/Portfolio Projects/writing-app-frontend/src/components/TipTapEditor.vue","mtime":1624501912548},{"path":"/Users/chelsearoston/Desktop/Portfolio Projects/writing-app-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chelsearoston/Desktop/Portfolio Projects/writing-app-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/chelsearoston/Desktop/Portfolio Projects/writing-app-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chelsearoston/Desktop/Portfolio Projects/writing-app-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IEVkaXRvciwgRWRpdG9yQ29udGVudCB9IGZyb20gIkB0aXB0YXAvdnVlLTIiOwppbXBvcnQgU3RhcnRlcktpdCBmcm9tICJAdGlwdGFwL3N0YXJ0ZXIta2l0IjsKaW1wb3J0IEZvbnRGYW1pbHkgZnJvbSAiQHRpcHRhcC9leHRlbnNpb24tZm9udC1mYW1pbHkiOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgRWRpdG9yQ29udGVudCwKICB9LAogIHByb3BzOiB7CiAgICB2YWx1ZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICIiLAogICAgfSwKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBlZGl0b3I6IG51bGwsCiAgICAgIHdvcmRDb3VudDogMCwKICAgICAganNvbjogbnVsbCwKICAgIH07CiAgfSwKICB3YXRjaDogewogICAgdmFsdWUodmFsdWUpIHsKICAgICAgLy8gY29uc3QgaXNTYW1lID0gdGhpcy5lZGl0b3IuZ2V0SFRNTCgpID09PSB2YWx1ZTsKICAgICAgLy8gSlNPTgogICAgICBjb25zdCBpc1NhbWUgPSB0aGlzLmVkaXRvci5nZXRKU09OKCkudG9TdHJpbmcoKSA9PT0gdmFsdWUudG9TdHJpbmcoKTsKICAgICAgaWYgKGlzU2FtZSkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdGhpcy5lZGl0b3IuY29tbWFuZHMuc2V0Q29udGVudCh0aGlzLnZhbHVlLCBmYWxzZSk7CiAgICB9LAogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuZWRpdG9yID0gbmV3IEVkaXRvcih7CiAgICAgIGV4dGVuc2lvbnM6IFtTdGFydGVyS2l0LCBGb250RmFtaWx5XSwKICAgICAgY29udGVudDogdGhpcy52YWx1ZSwKICAgICAgZWRpdG9yUHJvcHM6IHsKICAgICAgICBhdHRyaWJ1dGVzOiB7CiAgICAgICAgICBzcGVsbGNoZWNrOiAidHJ1ZSIsCiAgICAgICAgfSwKICAgICAgfSwKICAgICAgb25VcGRhdGU6ICgpID0+IHsKICAgICAgICB0aGlzLndvcmRDb3VudCA9IHRoaXMuZWRpdG9yLnN0YXRlLmRvYy50ZXh0Q29udGVudC5tYXRjaCgvXGIoXHcrKVxiL2cpLmxlbmd0aDsKICAgICAgICAvLyB0aGlzLiRlbWl0KCJpbnB1dCIsIHRoaXMuZWRpdG9yLmdldEhUTUwoKSk7CiAgICAgICAgLy8gSlNPTgoKICAgICAgICB0aGlzLiRlbWl0KCJpbnB1dCIsIHRoaXMuZWRpdG9yLmdldEpTT04oKSk7CiAgICAgICAgY29uc29sZS5sb2codGhpcy53b3JkQ291bnQpOwogICAgICB9LAogICAgfSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICB1cGRhdGVDaGFwdGVyOiBmdW5jdGlvbiAoY2hhcHRlcikgewogICAgICBsZXQgcGFyYW1zID0gewogICAgICAgIHRpdGxlOiBjaGFwdGVyLnRpdGxlLAogICAgICAgIGJvZHk6IHRoaXMuZGlzcGxheUNoYXB0ZXIsCiAgICAgIH07CiAgICAgIGF4aW9zLnBhdGNoKCIvY2hhcHRlcnMvIiArIGNoYXB0ZXIuaWQsIHBhcmFtcykudGhlbigocmVzcG9uc2UpID0+IHsKICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKTsKICAgICAgfSk7CiAgICB9LAogIH0sCgogIGJlZm9yZURlc3Ryb3koKSB7CiAgICB0aGlzLmVkaXRvci5kZXN0cm95KCk7CiAgfSwKfTsK"},{"version":3,"sources":["TipTapEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"TipTapEditor.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"tiptap-editor\">\n    <button\n      class=\"btn btn-primary btn-group-sm outline\"\n      @click=\"editor.chain().focus().toggleBold().run()\"\n      :class=\"{ 'is-active': editor.isActive('bold') }\"\n    >\n      <i class=\"ri-bold\"></i>\n    </button>\n    <button\n      class=\"btn btn-primary btn-group-sm outline\"\n      @click=\"editor.chain().focus().toggleItalic().run()\"\n      :class=\"{ 'is-active': editor.isActive('italic') }\"\n    >\n      <i class=\"ri-italic\"></i>\n    </button>\n    <button\n      class=\"btn btn-primary btn-group-sm outline\"\n      @click=\"editor.chain().focus().toggleStrike().run()\"\n      :class=\"{ 'is-active': editor.isActive('strike') }\"\n    >\n      <i class=\"ri-strikethrough\"></i>\n    </button>\n    <!-- <button\n      class=\"btn btn-primary btn-group-sm outline\"\n      @click=\"editor.chain().focus().toggleCode().run()\"\n      :class=\"{ 'is-active': editor.isActive('code') }\"\n    >\n      code\n    </button> -->\n    <!-- <button class=\"btn btn-primary btn-group-sm outline\" @click=\"editor.chain().focus().unsetAllMarks().run()\">\n      clear marks\n    </button>\n    <button class=\"btn btn-primary btn-group-sm outline\" @click=\"editor.chain().focus().clearNodes().run()\">\n      clear nodes\n    </button> -->\n    <button\n      class=\"btn btn-primary btn-group-sm outline\"\n      @click=\"editor.chain().focus().setParagraph().run()\"\n      :class=\"{ 'is-active': editor.isActive('paragraph') }\"\n    >\n      <i class=\"ri-paragraph\"></i>\n    </button>\n    <button\n      class=\"btn btn-primary btn-group-sm outline\"\n      @click=\"editor.chain().focus().toggleHeading({ level: 1 }).run()\"\n      :class=\"{ 'is-active': editor.isActive('heading', { level: 1 }) }\"\n    >\n      <i class=\"ri-h-1\"></i>\n    </button>\n    <button\n      class=\"btn btn-primary btn-group-sm outline\"\n      @click=\"editor.chain().focus().toggleHeading({ level: 2 }).run()\"\n      :class=\"{ 'is-active': editor.isActive('heading', { level: 2 }) }\"\n    >\n      <i class=\"ri-h-2\"></i>\n    </button>\n    <button\n      class=\"btn btn-primary btn-group-sm outline\"\n      @click=\"editor.chain().focus().toggleHeading({ level: 3 }).run()\"\n      :class=\"{ 'is-active': editor.isActive('heading', { level: 3 }) }\"\n    >\n      <i class=\"ri-h-3\"></i>\n    </button>\n    <button\n      class=\"btn btn-primary btn-group-sm outline\"\n      @click=\"editor.chain().focus().toggleHeading({ level: 4 }).run()\"\n      :class=\"{ 'is-active': editor.isActive('heading', { level: 4 }) }\"\n    >\n      <i class=\"ri-h-4\"></i>\n    </button>\n    <button\n      class=\"btn btn-primary btn-group-sm outline\"\n      @click=\"editor.chain().focus().toggleHeading({ level: 5 }).run()\"\n      :class=\"{ 'is-active': editor.isActive('heading', { level: 5 }) }\"\n    >\n      <i class=\"ri-h-5\"></i>\n    </button>\n    <button\n      class=\"btn btn-primary btn-group-sm outline\"\n      @click=\"editor.chain().focus().toggleHeading({ level: 6 }).run()\"\n      :class=\"{ 'is-active': editor.isActive('heading', { level: 6 }) }\"\n    >\n      <i class=\"ri-h-6\"></i>\n    </button>\n    <button\n      class=\"btn btn-primary btn-group-sm outline\"\n      @click=\"editor.chain().focus().toggleBulletList().run()\"\n      :class=\"{ 'is-active': editor.isActive('bulletList') }\"\n    >\n      <i class=\"ri-list-unordered\"></i>\n    </button>\n    <button\n      class=\"btn btn-primary btn-group-sm outline\"\n      @click=\"editor.chain().focus().toggleOrderedList().run()\"\n      :class=\"{ 'is-active': editor.isActive('orderedList') }\"\n    >\n      <i class=\"ri-list-ordered\"></i>\n    </button>\n    <!-- <button\n      class=\"btn btn-primary btn-group-sm outline\"\n      @click=\"editor.chain().focus().toggleCodeBlock().run()\"\n      :class=\"{ 'is-active': editor.isActive('codeBlock') }\"\n    >\n      code block\n    </button> -->\n    <!-- <button\n      class=\"btn btn-primary btn-group-sm outline\"\n      @click=\"editor.chain().focus().toggleBlockquote().run()\"\n      :class=\"{ 'is-active': editor.isActive('blockquote') }\"\n    >\n      blockquote\n    </button> -->\n    <!-- <button class=\"btn btn-primary btn-group-sm outline\" @click=\"editor.chain().focus().setHorizontalRule().run()\">\n      horizontal rule\n    </button>\n    <button class=\"btn btn-primary btn-group-sm outline\" @click=\"editor.chain().focus().setHardBreak().run()\">\n      hard break\n    </button> -->\n    <button class=\"btn btn-primary btn-group-sm outline\" @click=\"editor.chain().focus().undo().run()\">\n      <i class=\"ri-arrow-go-back-line\"></i>\n    </button>\n    <button class=\"btn btn-primary btn-group-sm outline\" @click=\"editor.chain().focus().redo().run()\">\n      <i class=\"ri-arrow-go-forward-line\"></i>\n    </button>\n\n    <editor-content :editor=\"editor\" />\n    word count: {{ wordCount }}\n  </div>\n</template>\n\n<script>\nimport { Editor, EditorContent } from \"@tiptap/vue-2\";\nimport StarterKit from \"@tiptap/starter-kit\";\nimport FontFamily from \"@tiptap/extension-font-family\";\nimport axios from \"axios\";\nexport default {\n  components: {\n    EditorContent,\n  },\n  props: {\n    value: {\n      type: String,\n      default: \"\",\n    },\n  },\n  data() {\n    return {\n      editor: null,\n      wordCount: 0,\n      json: null,\n    };\n  },\n  watch: {\n    value(value) {\n      // const isSame = this.editor.getHTML() === value;\n      // JSON\n      const isSame = this.editor.getJSON().toString() === value.toString();\n      if (isSame) {\n        return;\n      }\n\n      this.editor.commands.setContent(this.value, false);\n    },\n  },\n  mounted() {\n    this.editor = new Editor({\n      extensions: [StarterKit, FontFamily],\n      content: this.value,\n      editorProps: {\n        attributes: {\n          spellcheck: \"true\",\n        },\n      },\n      onUpdate: () => {\n        this.wordCount = this.editor.state.doc.textContent.match(/\\b(\\w+)\\b/g).length;\n        // this.$emit(\"input\", this.editor.getHTML());\n        // JSON\n\n        this.$emit(\"input\", this.editor.getJSON());\n        console.log(this.wordCount);\n      },\n    });\n  },\n  methods: {\n    updateChapter: function (chapter) {\n      let params = {\n        title: chapter.title,\n        body: this.displayChapter,\n      };\n      axios.patch(\"/chapters/\" + chapter.id, params).then((response) => {\n        console.log(response.data);\n      });\n    },\n  },\n\n  beforeDestroy() {\n    this.editor.destroy();\n  },\n};\n</script>\n"]}]}